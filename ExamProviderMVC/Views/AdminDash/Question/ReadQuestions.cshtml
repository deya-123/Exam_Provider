<div class="table-responsive" style="padding-left : 20px;padding-right: 20px;    ">
    <table id="question-table" class="table card-table table-vcenter text-nowrap datatable" style="width:100%">
        <thead >
            <tr>

                <th>Description</th>
                <th>Type</th>
                <th>Level</th>
                <th>Created At</th>
                <th>Options</th>
                <th>Edit</th>
                <th>Delete</th>



            </tr>
        </thead>
        <tbody>

            <!-- Additional rows as needed -->
        </tbody>
    </table>
</div>

<script>
    var questionIdNow = 1;
    var questionTable;
    document.addEventListener('DOMContentLoaded', function () {


      var a=1;
         questionTable = $('#question-table').DataTable({
            responsive: true,
            "scrollX": true,
            "pagingType": "full_numbers",
            "pageLength": 5,
            "lengthChange": true,
            "ajax": API_URL + 'Question/GetAllQuestionsByExamId/'+examIdNow,
            "columns": [
                { "data": "questionDescription" },
                { "data": "questionType" },
                {
                    "data": "questionLevel",
                    //"render": function (data, type, full, meta) {
                    //    // Display only the first 100 characters followed by "..." if the text exceeds that length
                    //    return data.length > 10 ? data.substr(0, 10) + "..." : data;
                    //}
                },
                {
                    "data": "createdAt",
                    "render": function (data, type, full, meta) {
                        if(data)
                        return data.replace('T', ' ');
                        else return data;
                    }
                },
                {
                    "data": null, // Edit column
                    "defaultContent": "<button data-bs-toggle=\"modal\" data-bs-target=\"#modal-option\" class=\"btn btn-info \">Options</button>",
                    "orderable": false
                },
                {
                    "data": null, // Edit column
                    "defaultContent": "<button data-bs-toggle=\"modal\" data-bs-target=\"#modal-edit-question\" class=\"btn btn-info \">Edit</button>",
                    "orderable": false
                },
                {
                    "data": null, // Edit column
                    "defaultContent": "<button data-bs-toggle=\"modal\" data-bs-target=\"#modal-delete-question\" class=\"btn btn-danger \">Delete</button>",
                    "orderable": false
                }
            ],
            "lengthMenu": [5, 10, 15, 20],
            "language": {
                "paginate": {
                    "first": '<<',  // Change as per need
                    "last": '>>',  // Change as per need
                    "next": '>',  // Change as per need
                    "previous": '<'  // Change as per need
                }
            },
            "order": [[3, 'desc']],
            "initComplete": function () {
                // Adjust column widths to ensure proper alignment
                questionTable.columns.adjust().draw();
            }
        });


        $('#question-table tbody').on('click', 'button', function () {
            var action = this.textContent.trim();
            var rowData = questionTable.row($(this).parents('tr')).data();
            var questionId = rowData['questionId'];
            questionIdNow = questionId;
            if (action === 'Options') {
               // document.getElementById("examIdQuestion").value = questionId;
                $('#option-table').DataTable().ajax.url(API_URL + 'QuestionOption/GetAllOptionsByQuestionId/' + questionIdNow).load();
            }
        

           else if (action === 'Edit') {
                $.ajax({
                    url: API_URL + "Question/GetQuestionById/" + questionId,
                    type: 'GET',
            
                    success: function (data) {
                    
                        populateForm("#editQuestionForm", data);
                        console.log("udpated")
                    },
                    error: function (xhr, textStatus, errorThrown) {
                        console.log('Error fetching user data:', errorThrown);
                    }
                });
            }
            else if (action === 'Delete') {
                {
                    var deleteQuestionForm = document.querySelector('#deleteQuestionForm');
                    if (deleteQuestionForm) {
                        deleteQuestionForm.action = API_URL + "Question/DeleteQuestion/" + questionId;
                    }
                }
            }
        });


      






    });








</script>